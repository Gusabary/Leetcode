#include <vector>
#include <iostream>

using namespace std;

class Solution {
public:
    int maxJumps(vector<int>& arr, int d) {
        int mmax = 1;
        vector<bool> visited(arr.size(), false);

        while (true) {
            // pick a highest but not visited index
            int highest = 0;
            int ii = -1;
            for (int i = 0; i < arr.size(); i++) {
                if (arr[i] > highest && !visited[i]) {
                    highest = arr[i];
                    ii = i;
                }
            }
            if (ii == -1) {
                return mmax;
            }

            vector<int> f;
            f.resize(arr.size());
            f[ii] = 1;
            visited[ii] = true;
            int mini = ii;
            int maxi = ii;
            while (true) {
                cout << ii << endl;
                bool ok = true;
                for (int i = mini; i <= maxi; i++) {
                    if (f[i] > 0) {
                        for (int j = i + 1; j <= i + d; j++) {
                            if (j < arr.size() && arr[j] < arr[i]) {
                                visited[j] = true;
                                if (f[j] < f[i] + 1) {
                                    f[j] = f[i] + 1;
                                    ok = false;
                                    if (j > maxi)
                                        maxi = j;
                                }
                            }
                            else {
                                break;
                            }
                        }
                        for (int j = i - 1; j >= i - d; j--) {
                            if (j >= 0 && arr[j] < arr[i]) {
                                visited[j] = true;
                                if (f[j] < f[i] + 1) {
                                    f[j] = f[i] + 1;
                                    ok = false;
                                    if (j < mini)
                                        mini = j;
                                }
                            }
                            else {
                                break;
                            }
                        }
                    }
                }
                if (ok) {
                    int max = 0;
                    for (int fi : f) {
                        if (fi > max)
                            max = fi;
                    }
                    if (max > mmax)
                        mmax = max;
                    break;
                }
            }
        }
    }
};

int main() {
    Solution s;
    vector<int> v = {85,182,210,214,528,560,692,738,876,945,1028,1067,1194,1507,1955,2020,2095,2259,2376,2723,2843,2949,2999,3006,3010,3488,3551,3649,3669,3682,3776,3916,3933,4465,4490,4644,4700,4740,5183,5419,5487,5519,5606,5626,5677,5806,5897,5944,5947,6098,6110,6114,6148,6212,6463,6705,7022,7048,7297,7328,7354,7396,7465,7721,8053,8250,8287,8401,8530,8647,8705,8787,8942,8954,9166,9244,9378,9550,9722,9754,9829,9882,9981,10054,10115,10337,10796,10886,10938,11209,11318,11495,11681,11774,11817,11998,12016,12075,12097,12217,12352,12373,12479,12540,12638,12644,13094,13111,13124,13166,13173,13202,13539,13919,13981,14009,14288,14455,14683,15064,15141,15424,15447,15485,15618,15646,15721,15729,15908,15991,16151,16301,16329,16338,16548,16630,16917,17091,17140,17301,17332,17343,17364,17396,17542,17666,17757,17903,18133,18261,18320,18496,18509,18518,18541,18593,18637,18661,18788,19111,19156,19277,19283,19326,19693,19767,19986,20009,20108,20386,20429,20695,20697,21056,21074,21079,21232,21461,21537,21703,21709,21746,21825,22077,22082,22112,22157,22215,22219,22409,22538,22720,23227,23493,23636,23752,23846,23880,23907,23968,24059,24565,24676,24990,25002,25085,25124,25142,25181,25452,25565,25896,26009,26067,26098,26162,26220,26359,26392,26400,26536,26741,26813,26979,27014,27033,27050,27147,27198,27274,27292,27307,27389,27403,27486,27517,27544,27625,27642,27720,27829,27880,27897,27967,27987,28118,28277,28384,28900,28970,29220,29450,29546,29612,29800,30026,30120,30135,30223,30307,30358,30414,30437,30572,30661,30698,30758,30826,31043,31097,31117,31244,31450,32650,32862,32869,33022,33070,33336,33367,33410,33555,33569,33572,33632,33662,33742,33860,33937,33946,33965,34120,34146,34420,34516,34569,34701,34977,35381,35640,35668,35738,35774,35839,35919,36039,36075,36233,36246,36375,36515,36625,36692,36737,36761,36940,37102,37201,37392,37455,37585,37928,37960,38003,38153,38216,38382,38400,38405,38487,38767,38785,38889,38993,39032,39093,39379,39382,39465,39556,39755,39756,39815,39882,39893,39944,40024,40187,40260,40361,40388,40414,40485,40541,40584,40743,40754,40794,40840,40949,41005,41207,41219,41756,41773,41968,42264,42308,42423,42491,42507,42609,42625,42661,42744,42819,42833,42864,42878,43239,43271,43300,43360,43378,43505,43510,43807,43825,43832,43981,44619,44634,44645,44715,44899,44961,45057,45075,45276,45356,45514,45702,45718,46156,46268,46361,46460,46588,46590,46670,47170,47371,47612,48159,48325,48360,48362,48364,48472,48516,48762,48967,49074,49227,49292,49353,49591,49630,49737,49848,49909,49915,49918,50011,50503,50532,50786,50819,51110,51576,51674,51708,51970,52278,52581,52692,52841,52860,52905,53023,53110,53211,53332,53481,53502,53616,53618,53695,53719,53862,54093,54206,54316,54461,54528,54583,54705,54834,54852,54961,55253,55545,55608,55666,55815,55953,56652,57047,57060,57139,57187,57410,57426,57443,57515,57590,57622,57788,57843,58240,58295,58389,58414,58527,58651,58848,58892,59125,59268,59521,59905,60042,60191,60748,60896,60913,61132,61145,61373,61446,61536,61719,61786,61934,62004,62068,62201,62205,62343,62884,62981,63046,63079,63098,63130,63584,63676,64360,64478,64497,64800,64844,64890,64900,64997,65013,65146,65257,65326,65366,65527,65556,65595,65639,65791,65843,66238,66269,66273,66409,66420,66450,66632,66802,66805,66900,67064,67191,67562,67824,67920,67947,67997,68064,68121,68205,68224,68225,68299,68304,68322,68395,68412,68673,69147,69361,69636,70005,70350,70353,70457,70559,70675,70718,70776,70961,71222,71223,71401,71436,71751,71890,72133,72163,72349,72381,72480,72485,72681,72757,72784,72906,73044,73090,73197,73596,73716,73873,74263,74405,74613,74731,74776,74777,74827,74956,75296,75544,75597,75655,75841,76018,76170,76227,76259,76262,76274,76288,76569,76665,76703,76743,76745,76760,76966,76991,77085,77099,77270,77341,77680,77763,77774,77864,77926,77970,78011,78144,78286,78310,78339,78501,78535,78557,78630,79018,79135,79483,79567,79581,79695,79784,79818,79881,79932,80010,80155,80169,80200,80221,80335,80450,80454,80497,80527,80532,80685,80824,81098,81259,81368,81475,81608,81617,81635,81658,81885,81923,82070,82104,82159,82402,82464,82543,82613,82803,83057,83087,83510,83591,83720,83835,83931,84167,84318,84353,84495,84555,84597,84605,84668,84718,84846,85048,85052,85057,85103,85249,85322,85352,85364,85429,85527,85575,85852,86074,86132,86508,86533,86663,86683,86879,86903,86965,87094,87100,87141,87164,87237,87314,87338,87473,87805,87860,87985,87991,88080,88212,88344,88375,88413,88681,88685,88867,88917,88935,88960,89165,89232,89274,89353,89577,89655,89750,89820,90058,90100,90218,90370,90388,90543,90557,90562,90588,90600,90621,90641,90659,90755,90885,90969,91140,91573,91656,91666,91667,91697,91745,91822,91909,91961,92447,92719,93016,93060,93204,93401,93447,93558,93584,93844,93864,93870,94029,94120,94321,94501,94711,94780,94782,94892,94908,94928,94982,95079,95131,95145,95161,95468,95666,95774,95776,95837,95867,95869,95937,96006,96078,96177,96286,96394,96516,96552,96578,96615,96628,96682,96741,96750,97010,97051,97211,97233,97326,97373,97541,97634,97739,97884,97940,98142,98179,98342,98524,98526,98593,98647,98803,98959,99085,99182,99398,99400,99598,99653,99751,99853,99939,99959,99966,99973,99974};
    int ans = s.maxJumps(v, 218);
    cout << ans << endl;
    system("pause");
    return 0;
}